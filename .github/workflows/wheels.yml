name: Build And Release Wheels

on:
  push:
    branches:
      - main

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-15-intel]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ilammy/msvc-dev-cmd@v1.13.0
      - name: Build wheels
        uses: pypa/cibuildwheel@v3.2.1
        with:
          output-dir: wheelhouse
      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: wheels-${{ matrix.os }}

  upload_all:
    name: Upload To PyPi
    needs: build_wheels
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
    - uses: actions/setup-python@v4
    - uses: actions/download-artifact@v4
      with:
        pattern: wheels-*
        merge-multiple: true
        path: dist
    - name: Publish
      uses: pypa/gh-action-pypi-publish@v1.8.12

  release:
    permissions:
      contents: write  # for actions/create-release
    name: Create GitHub Release
    needs: [build_wheels]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Tag Version
        id: set_tag
        run: |
          export VER=$(python -c "print(next(eval(L.split('=')[-1]) for L in open('pyproject.toml') if L.startswith('version ')))")
          echo "::set-output name=tag_name::${VER}"
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.set_tag.outputs.tag_name }}
          release_name: Release ${{ steps.set_tag.outputs.tag_name }}
          draft: false
          prerelease: false
